// <auto-generated />
using System;
using HasatPiyasa.Entity.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HasatPiyasa.Entity.Migrations
{
    [DbContext(typeof(HasatPiyasaContext))]
    [Migration("20200713091216_Hp")]
    partial class Hp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.Bolges", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Bolges");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.Captions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmteaTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmteaTypesId")
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<int>("LeftMainCaptionCount")
                        .HasColumnType("int");

                    b.Property<int>("MainCaptionCount")
                        .HasColumnType("int");

                    b.Property<string>("NaturalDataInputCaption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NaturalDataInputCaptionCount")
                        .HasColumnType("int");

                    b.Property<string>("PerakendeDataInputCaption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerakendeDataInputCaptionCount")
                        .HasColumnType("int");

                    b.Property<int>("StandartCaptionCount")
                        .HasColumnType("int");

                    b.Property<string>("ToptanPiyasaDataInputCaption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToptanPiyasaDataInputCaptionCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmteaTypesId");

                    b.ToTable("Captions");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.Cities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Plaka")
                        .HasColumnType("int");

                    b.Property<int?>("SubeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SubeId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.Claims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClaimName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.DataInputs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("AlimYear")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("EmteaTypeId")
                        .HasColumnType("int");

                    b.Property<double>("HasatMiktar")
                        .HasColumnType("float");

                    b.Property<double>("HasatOran")
                        .HasColumnType("float");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<double?>("Natural1")
                        .HasColumnType("float");

                    b.Property<double?>("Natural2")
                        .HasColumnType("float");

                    b.Property<double?>("Natural3")
                        .HasColumnType("float");

                    b.Property<double?>("Natural4")
                        .HasColumnType("float");

                    b.Property<double?>("Natural5")
                        .HasColumnType("float");

                    b.Property<double?>("NaturalToplam")
                        .HasColumnType("float");

                    b.Property<double?>("Perakende1")
                        .HasColumnType("float");

                    b.Property<double?>("Perakende2")
                        .HasColumnType("float");

                    b.Property<double?>("Perakende3")
                        .HasColumnType("float");

                    b.Property<double?>("Perakende4")
                        .HasColumnType("float");

                    b.Property<double?>("Perakende5")
                        .HasColumnType("float");

                    b.Property<double?>("PerakendeToplam")
                        .HasColumnType("float");

                    b.Property<int>("SubeId")
                        .HasColumnType("int");

                    b.Property<double?>("ToptanPiyasa1")
                        .HasColumnType("float");

                    b.Property<double?>("ToptanPiyasa2")
                        .HasColumnType("float");

                    b.Property<double?>("ToptanPiyasa3")
                        .HasColumnType("float");

                    b.Property<double?>("ToptanPiyasa4")
                        .HasColumnType("float");

                    b.Property<double?>("ToptanPiyasa5")
                        .HasColumnType("float");

                    b.Property<double?>("ToptanPiyasaToplam")
                        .HasColumnType("float");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("UreticiKalanMiktar")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AddUserId");

                    b.HasIndex("CityId");

                    b.HasIndex("EmteaTypeId");

                    b.HasIndex("SubeId");

                    b.HasIndex("UpdateUserId");

                    b.ToTable("DataInputs");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.EmteaGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EmteaId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmteaId");

                    b.ToTable("EmteaGroups");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.EmteaTypeGroups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmteaTypeGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmteaTypeId")
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmteaTypeId");

                    b.ToTable("EmteaTypeGroups");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.EmteaTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmteaId")
                        .HasColumnType("int");

                    b.Property<string>("EmteaTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmteaId");

                    b.ToTable("EmteaTypes");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.Emteas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmteaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmteaName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Emteas");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.Subes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("BolgeId")
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("SubeKod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BolgeId");

                    b.ToTable("Subes");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.Tuiks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("EmteaTypeId")
                        .HasColumnType("int");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<bool>("IsCity")
                        .HasColumnType("bit");

                    b.Property<int?>("SubeId")
                        .HasColumnType("int");

                    b.Property<int>("TuikYear")
                        .HasColumnType("int");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AddUserId");

                    b.HasIndex("CityId");

                    b.HasIndex("EmteaTypeId");

                    b.HasIndex("SubeId");

                    b.HasIndex("UpdateUserId");

                    b.ToTable("Tuiks");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.UserClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DomainUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<bool>("IsDomain")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SicilNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubeId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex("SubeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.Captions", b =>
                {
                    b.HasOne("HasatPiyasa.Entity.Entity.EmteaTypes", "EmteaTypes")
                        .WithMany("Captions")
                        .HasForeignKey("EmteaTypesId");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.Cities", b =>
                {
                    b.HasOne("HasatPiyasa.Entity.Entity.Subes", "Sube")
                        .WithMany("Cities")
                        .HasForeignKey("SubeId")
                        .HasConstraintName("FK_Cities_Subes");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.DataInputs", b =>
                {
                    b.HasOne("HasatPiyasa.Entity.Entity.Users", "AddUser")
                        .WithMany("DataInputsAddUser")
                        .HasForeignKey("AddUserId")
                        .HasConstraintName("FK_DataInputs_Users")
                        .IsRequired();

                    b.HasOne("HasatPiyasa.Entity.Entity.Cities", "City")
                        .WithMany("DataInputs")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HasatPiyasa.Entity.Entity.EmteaTypes", "EmteaType")
                        .WithMany("DataInputs")
                        .HasForeignKey("EmteaTypeId")
                        .HasConstraintName("FK_DataInputs_EmteaTypes")
                        .IsRequired();

                    b.HasOne("HasatPiyasa.Entity.Entity.Subes", "Sube")
                        .WithMany("DataInputs")
                        .HasForeignKey("SubeId")
                        .HasConstraintName("FK_DataInputs_Subes")
                        .IsRequired();

                    b.HasOne("HasatPiyasa.Entity.Entity.Users", "UpdateUser")
                        .WithMany("DataInputsUpdateUser")
                        .HasForeignKey("UpdateUserId")
                        .HasConstraintName("FK_DataInputs_Users1");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.EmteaGroups", b =>
                {
                    b.HasOne("HasatPiyasa.Entity.Entity.Emteas", "Emtea")
                        .WithMany("EmteaGroups")
                        .HasForeignKey("EmteaId")
                        .HasConstraintName("FK_EmteaGroups_Emteas");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.EmteaTypeGroups", b =>
                {
                    b.HasOne("HasatPiyasa.Entity.Entity.EmteaTypes", "EmteaType")
                        .WithMany("EmteaTypeGroups")
                        .HasForeignKey("EmteaTypeId")
                        .HasConstraintName("FK_EmteaTypeGroups_EmteaTypes");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.EmteaTypes", b =>
                {
                    b.HasOne("HasatPiyasa.Entity.Entity.Emteas", "Emtea")
                        .WithMany("EmteaTypes")
                        .HasForeignKey("EmteaId")
                        .HasConstraintName("FK_EmteaTypes_Emteas")
                        .IsRequired();
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.Subes", b =>
                {
                    b.HasOne("HasatPiyasa.Entity.Entity.Bolges", "Bolge")
                        .WithMany("Subes")
                        .HasForeignKey("BolgeId")
                        .HasConstraintName("FK_Subes_Bolges")
                        .IsRequired();
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.Tuiks", b =>
                {
                    b.HasOne("HasatPiyasa.Entity.Entity.Users", "AddUser")
                        .WithMany("TuiksAddUser")
                        .HasForeignKey("AddUserId")
                        .HasConstraintName("FK_Tuiks_Users")
                        .IsRequired();

                    b.HasOne("HasatPiyasa.Entity.Entity.Cities", "City")
                        .WithMany("Tuiks")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_Tuiks_Cities");

                    b.HasOne("HasatPiyasa.Entity.Entity.EmteaTypes", "EmteaType")
                        .WithMany("Tuiks")
                        .HasForeignKey("EmteaTypeId")
                        .HasConstraintName("FK_Tuiks_EmteaTypes")
                        .IsRequired();

                    b.HasOne("HasatPiyasa.Entity.Entity.Subes", "Sube")
                        .WithMany("Tuiks")
                        .HasForeignKey("SubeId")
                        .HasConstraintName("FK_Tuiks_Subes");

                    b.HasOne("HasatPiyasa.Entity.Entity.Users", "UpdateUser")
                        .WithMany("TuiksUpdateUser")
                        .HasForeignKey("UpdateUserId")
                        .HasConstraintName("FK_Tuiks_Users1");
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.UserClaims", b =>
                {
                    b.HasOne("HasatPiyasa.Entity.Entity.Claims", "Claim")
                        .WithMany("UserClaims")
                        .HasForeignKey("ClaimId")
                        .HasConstraintName("FK_UserClaims_Claims")
                        .IsRequired();

                    b.HasOne("HasatPiyasa.Entity.Entity.Users", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserClaims_Users")
                        .IsRequired();
                });

            modelBuilder.Entity("HasatPiyasa.Entity.Entity.Users", b =>
                {
                    b.HasOne("HasatPiyasa.Entity.Entity.Subes", "Sube")
                        .WithMany("Users")
                        .HasForeignKey("SubeId")
                        .HasConstraintName("FK_Users_Subes")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
